From eff784484eb78bce865fb638c4d17173d7a1af69 Mon Sep 17 00:00:00 2001
Message-ID: <eff784484eb78bce865fb638c4d17173d7a1af69.1698844549.git.leon@kernel.org>
From: Leon Romanovsky <leon@kernel.org>
Date: Wed, 1 Nov 2023 14:43:44 +0200
Subject: [PATCH] simx: Fix function mismatch

../stubs/replay-tools.c:10:9: error: conflicting types for 'replay_save_clock' due to enum/integer mismatch; have 'int64_t(unsigned int,  int64_t,  int64_t)' {aka 'long int(unsigned int,  long int,  long int)'} [-Werror=enum-int-mismatch]
   10 | int64_t replay_save_clock(unsigned int kind, int64_t clock, int64_t raw_icount)
      |         ^~~~~~~~~~~~~~~~~
In file included from ../stubs/replay-tools.c:2:
/opt/src/include/sysemu/replay.h:128:9: note: previous declaration of 'replay_save_clock' with type 'int64_t(ReplayClockKind,  int64_t,  int64_t)' {aka 'long int(ReplayClockKind,  long int,  long int)'}
  128 | int64_t replay_save_clock(ReplayClockKind kind, int64_t clock,
      |         ^~~~~~~~~~~~~~~~~
../stubs/replay-tools.c:16:9: error: conflicting types for 'replay_read_clock' due to enum/integer mismatch; have 'int64_t(unsigned int,  int64_t)' {aka 'long int(unsigned int,  long int)'} [-Werror=enum-int-mismatch]
   16 | int64_t replay_read_clock(unsigned int kind, int64_t raw_icount)
      |         ^~~~~~~~~~~~~~~~~
/opt/src/include/sysemu/replay.h:131:9: note: previous declaration of 'replay_read_clock' with type 'int64_t(ReplayClockKind,  int64_t)' {aka 'long int(ReplayClockKind,  long int)'}
  131 | int64_t replay_read_clock(ReplayClockKind kind, int64_t raw_icount);
      |         ^~~~~~~~~~~~~~~~~
cc1: all warnings being treated as errors

Signed-off-by: Leon Romanovsky <leon@kernel.org>
---
 replay/replay-internal.h | 2 +-
 stubs/replay-tools.c     | 4 ++--
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/replay/replay-internal.h b/replay/replay-internal.h
index 97649ed8d..b4238226f 100644
--- a/replay/replay-internal.h
+++ b/replay/replay-internal.h
@@ -141,7 +141,7 @@ bool replay_next_event_is(int event);
 /*! Reads next clock value from the file.
     If clock kind read from the file is different from the parameter,
     the value is not used. */
-void replay_read_next_clock(unsigned int kind);
+void replay_read_next_clock(ReplayClockKind kind);
 
 /* Asynchronous events queue */
 
diff --git a/stubs/replay-tools.c b/stubs/replay-tools.c
index 43296b3d4..d2d6c1c93 100644
--- a/stubs/replay-tools.c
+++ b/stubs/replay-tools.c
@@ -7,13 +7,13 @@ bool replay_events_enabled(void)
     return false;
 }
 
-int64_t replay_save_clock(unsigned int kind, int64_t clock, int64_t raw_icount)
+int64_t replay_save_clock(ReplayClockKind kind, int64_t clock, int64_t raw_icount)
 {
     abort();
     return 0;
 }
 
-int64_t replay_read_clock(unsigned int kind, int64_t raw_icount)
+int64_t replay_read_clock(ReplayClockKind kind, int64_t raw_icount)
 {
     abort();
     return 0;
-- 
2.41.0

